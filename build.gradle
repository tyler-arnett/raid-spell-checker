plugins {
	id 'java'
}

def runeLiteVersion = '1.11.12-SNAPSHOT'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url = 'https://repo.runelite.net' }
}

dependencies {
	implementation "net.runelite:client:$runeLiteVersion"
	implementation "net.runelite:runelite-api:$runeLiteVersion"
	implementation "net.runelite:cache:$runeLiteVersion"

	compileOnly "org.projectlombok:lombok:1.18.30"
	annotationProcessor "org.projectlombok:lombok:1.18.30"
}

group = 'com.example'
version = '1.0-SNAPSHOT'

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.release.set(11)
}

tasks.register('shadowJar', Jar) {
	dependsOn configurations.testRuntimeClasspath
	manifest {
		attributes('Main-Class': 'com.example.ExamplePluginTest', 'Multi-Release': true)
	}

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from sourceSets.main.output
	from sourceSets.test.output
	from {
		configurations.testRuntimeClasspath.collect { file ->
			file.isDirectory() ? file : zipTree(file)
		}
	}

	exclude 'META-INF/INDEX.LIST'
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
	exclude '**/module-info.class'

	group = BasePlugin.BUILD_GROUP
	archiveClassifier.set('shadow')
	archiveFileName.set("${rootProject.name}-${project.version}-all.jar")
}

sourceSets {
	main {
		resources {
			srcDir 'src/main/resources'
		}
	}
}

tasks.processResources
		{
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	}